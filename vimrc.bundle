" This code is copied from https://github.com/VundleVim/Vundle.vim

" Plugins {{{

  " Init Vundle {{{
    set nocompatible              " be iMproved, required
    filetype off                  " required

    " set the runtime path to include Vundle and initialize
    set rtp+=~/.vim/bundle/Vundle.vim
    call vundle#begin()
    " alternatively, pass a path where Vundle should install plugins
    " call vundle#begin('~/some/path/here')

    " let Vundle manage Vundle, required
    Plugin 'VundleVim/Vundle.vim'

    " Plugin Samples {{{
      " The following are examples of different formats supported.
      " Keep Plugin commands between vundle#begin/end.
      " plugin on GitHub repo
      " Plugin 'tpope/vim-fugitive'

      " plugin from http://vim-scripts.org/vim/scripts.html
      " Plugin 'L9'

      " Git plugin not hosted on GitHub
      " Plugin 'git://git.wincent.com/command-t.git'

      " git repos on your local machine (i.e. when working on your own plugin)
      " Plugin 'file:///home/gmarik/path/to/plugin'

      " The sparkup vim script is in a subdirectory of this repo called vim.
      " Pass the path to set the runtimepath properly.
      " Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}

      " Avoid a name conflict with L9
      " Plugin 'user/L9', {'name': 'newL9'}
    " Plugin Samples }}}
  " Init Vundle }}}

" All of your Plugins must be added after this

Plugin 'tpope/vim-sensible'
Plugin 'bling/vim-airline'
Plugin 'nanotech/jellybeans.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'tpope/vim-unimpaired'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-jdaddy'
Plugin 'tpope/vim-endwise'
Plugin 'vim-ruby/vim-ruby'
Plugin 'kien/ctrlp.vim'
Plugin 'scrooloose/syntastic'
Plugin 'bronson/vim-visual-star-search'
Plugin 'sjl/gundo.vim'
Plugin 'maxbrunsfeld/vim-yankstack'

" All of your Plugins must be added before this

  " Finalize Vundle {{{
    call vundle#end()            " required
    filetype plugin indent on    " required
    " To ignore plugin indent changes, instead use:
    " filetype plugin on

    " Brief help
    " :PluginList       - lists configured plugins
    " :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
    " :PluginSearch foo - searches for foo; append `!` to refresh local cache
    " :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
    "
    " see :h vundle for more details or wiki for FAQ
    " Put your non-Plugin stuff after this line
  " Finalize Vundle }}}

" Plugins }}}

" Yankstack {{{
    " This needs to happen before other mappings involving y, d, c, etc
    call yankstack#setup()

    nmap <leader>o <Plug>yankstack_substitute_older_paste
    nmap <leader>i <Plug>yankstack_substitute_newer_paste
" }}}

" Set colors {{{

  set background=dark
  colorscheme jellybeans

" Set colors }}}

" Airline Config {{{

  let g:airline_theme = 'jellybeans'
  " let g:airline_theme = 'simple'
  " let g:airline_theme = 'serene'

  let g:airline#extensions#tabline#enabled = 1
  let g:airline#extensions#tabline#show_buffers = 1

  if !exists('g:airline_symbols')
    let g:airline_symbols = {}
  endif

  let g:airline_left_sep = ''
  let g:airline_right_sep = ''

  " unicode symbols
  let g:airline_symbols.linenr = '␤'
  let g:airline_symbols.linenr = '¶'
  let g:airline_symbols.branch = '⎇'
  let g:airline_symbols.readonly = ''
  let g:airline_symbols.paste = 'ρ'

" Airline Config }}}

" Fugitive Config {{{
    " Delete fugitive buffers so that they don't pollute buffers
    autocmd BufReadPost fugitive://* set bufhidden=delete

    " .. to go up to the parent dir
    autocmd User fugitive
      \ if fugitive#buffer().type() =~# '^\%(tree\|blob\)$' |
      \   nnoremap <buffer> .. :edit %:h<CR> |
      \ endif

    nnoremap <silent> <leader>gs :Gstatus<CR>
    nnoremap <silent> <leader>gd :Gdiff<CR>
    nnoremap <silent> <leader>gc :Gcommit<CR>
    nnoremap <silent> <leader>gb :Gblame<CR>
    nnoremap <silent> <leader>gl :Glog<CR>
" Fugitive Config }}}

" NERDTree {{{
    nmap <leader>f :NERDTreeTabsToggle<cr>
    nmap <leader>F :NERDTreeFind<cr>

    let NERDTreeQuitOnOpen=1
    let g:NERDTreeChDirMode=2
    let NERDTreeShowBookmarks=1
    let NERDTreeHighlightCursorline=1
    let NERDTreeIgnore = ['.swp', 'pkg']
" }}}

" Git Gutter Settings {{{
    let g:gitgutter_max_signs = 1000
" }}}

" CtrlP Mappings {{{
    let g:ctrlp_working_path_mode = 2
    let g:ctrlp_by_filename = 1
    let g:ctrlp_max_files = 600
    let g:ctrlp_max_depth = 5

    let g:ctrlp_map = '<c-p>'
    let g:ctrlp_cmd = 'CtrlP'

    let g:ctrlp_custom_ignore = {
      \ 'dir':  '\v[\/]\.(git|hg|svn)$',
      \ 'file': '\v\.(exe|so|dll)$',
      \ 'link': 'some_bad_symbolic_links',
      \ }
" }}}

" Syntastic Mappings {{{
    let g:syntastic_always_populate_loc_list = 1
    let g:syntastic_auto_loc_list = 1
    let g:syntastic_check_on_open = 1
    let g:syntastic_check_on_wq = 0

    let g:syntastic_mode_map = { 'mode': 'passive' }
    let g:syntastic_ruby_exec = '/Users/latheesh.padukana/.rubies/ruby-2.1.3/bin/ruby'
    let g:syntastic_javascript_checkers = ['eslint']
    let g:syntastic_html_tidy_ignore_errors=["proprietary attribute \"ng-"]
" }}}

" Gundo - show undo tree {{{
    map <leader>u :GundoToggle<cr>
" }}}

" vim: sw=4 ts=4 sts=4 et tw=78 foldlevel=0 foldmethod=marker

